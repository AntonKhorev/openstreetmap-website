#!/usr/bin/env ruby

display_name, = ARGV

unless display_name
  puts <<~CUT
    Configures the built-in openstreetmap-website applications.
    See <https://github.com/openstreetmap/openstreetmap-website/blob/master/CONFIGURE.md#oauth-consumer-keys>.

    Usage: #{$PROGRAM_NAME} display_name
  CUT

  exit 1
end

require "pathname"
require_relative File.join("..", "config", "environment")

settings_filename = File.join(File.dirname(__FILE__), "..", "config", "settings.local.yml")
settings_filename = Pathname.new(settings_filename).cleanpath
settings_file_missing = false
settings = {}

begin
  settings = YAML.load_file settings_filename, :permitted_classes => [Symbol, Time], :fallback => {}
rescue Errno::ENOENT
  settings_file_missing = true
end

already_defined_keys = %w[id_application oauth_application oauth_key] & settings.keys

unless already_defined_keys.empty?
  puts "The following options are already defined in your #{settings_filename}:"
  already_defined_keys.each do |key|
    puts "- #{key}"
  end
  puts ""
  puts "Delete or comment them out to proceed."

  exit 1
end

user = User.find_by! :display_name => display_name

model = Doorkeeper.config.application_model

id_application = model.create :name => "Local iD",
                              :redirect_uri => "http://localhost:3000",
                              :scopes => %w[read_prefs write_prefs write_api read_gpx write_gpx write_notes],
                              :confidential => false,
                              :owner => user

web_application = model.create :name => "OpenStreetMap Web Site",
                               :redirect_uri => "http://localhost:3000",
                               :scopes => %w[write_api write_notes],
                               :owner => user

if settings_file_missing
  puts "Create #{settings_filename} with the following content:"
else
  puts "Copy the following to your #{settings_filename}:"
end

puts <<~CUT

  # OAuth 2 Client ID for iD
  id_application: "#{id_application.uid}"
  # OAuth 2 Client ID for the web site
  oauth_application: "#{web_application.uid}"
  # OAuth 2 Client Secret for the web site
  oauth_key: "#{web_application.plaintext_secret}"
CUT
